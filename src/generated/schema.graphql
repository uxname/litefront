schema {
  query: Query
  mutation: Mutation
}

type Account {
  _count: AccountCount!
  avatarUrl: String
  createdAt: DateTime!
  email: String!
  id: Int!
  roles: [AccountRole!]
  sessions: [AccountSession!]
  status: AccountStatus!
  updatedAt: DateTime!
}

type AccountCount {
  sessions: Int!
}

enum AccountRole {
  ADMIN
  USER
}

type AccountSession {
  account: Account!
  accountId: Int!
  createdAt: DateTime!
  expiresAt: DateTime!
  id: Int!
  ipAddr: String!
  updatedAt: DateTime!
  userAgent: String
}

enum AccountStatus {
  ACTIVE
  DELETED
  INACTIVE
}

type AuthResponse {
  account: Account!
  token: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GenerateEmailCodeResponse {
  expiresAt: DateTime!
  result: Boolean!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  activateAccount(code: String!, email: String!): Account!
  changePassword(newPassword: String!, password: String!): Account!
  echo(text: String!): String!
  generateEmailCode(email: String!): GenerateEmailCodeResponse!
  login(email: String!, password: String!): AuthResponse!
  loginAs(email: String!): AuthResponse!
  logout(sessionIds: [Float!]!): Boolean!
  register(email: String!, password: String!): AuthResponse!
  resetPassword(email: String!, emailCode: String!, newPassword: String!): Account!
  updateAccount(input: UpdateAccountInput!): Account!
}

type Query {
  currentSession: AccountSession!
  debug: JSON!
  echo(text: String!): String!
  whoami: Account!
}

input UpdateAccountInput {
  avatarUrl: String!
}