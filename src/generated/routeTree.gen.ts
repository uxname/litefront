/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './../routes/__root'

const IndexLazyRouteImport = createFileRoute('/')()
const RegisterIndexLazyRouteImport = createFileRoute('/register/')()
const LoginIndexLazyRouteImport = createFileRoute('/login/')()
const AboutIndexLazyRouteImport = createFileRoute('/about/')()

const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./../routes/index.lazy').then((d) => d.Route))
const RegisterIndexLazyRoute = RegisterIndexLazyRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./../routes/register/index.lazy').then((d) => d.Route),
)
const LoginIndexLazyRoute = LoginIndexLazyRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./../routes/login/index.lazy').then((d) => d.Route),
)
const AboutIndexLazyRoute = AboutIndexLazyRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./../routes/about/index.lazy').then((d) => d.Route),
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/register': typeof RegisterIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/register': typeof RegisterIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/about/': typeof AboutIndexLazyRoute
  '/login/': typeof LoginIndexLazyRoute
  '/register/': typeof RegisterIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/login' | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/login' | '/register'
  id: '__root__' | '/' | '/about/' | '/login/' | '/register/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutIndexLazyRoute: typeof AboutIndexLazyRoute
  LoginIndexLazyRoute: typeof LoginIndexLazyRoute
  RegisterIndexLazyRoute: typeof RegisterIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutIndexLazyRoute: AboutIndexLazyRoute,
  LoginIndexLazyRoute: LoginIndexLazyRoute,
  RegisterIndexLazyRoute: RegisterIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
